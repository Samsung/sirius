/**
 * Copyright (c) 2015 Obeo
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *    Obeo - initial API and implementation
 *
 */
package org.eclipse.sirius.tests.sample.docbook.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.eclipse.sirius.tests.sample.docbook.util.DocbookAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support
 * Viewers. The adapters generated by this factory convert EMF adapter
 * notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}. The
 * adapters also support Eclipse property sheets. Note that most of the adapters
 * are shared among multiple instances. <!-- begin-user-doc --> <!--
 * end-user-doc -->
 *
 * @generated
 */
public class DocbookItemProviderAdapterFactory extends DocbookAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
    /**
     * This keeps track of the root adapter factory that delegates to this
     * adapter factory. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ComposedAdapterFactory parentAdapterFactory;

    /**
     * This is used to implement
     * {@link org.eclipse.emf.edit.provider.IChangeNotifier}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected IChangeNotifier changeNotifier = new ChangeNotifier();

    /**
     * This keeps track of all the supported types checked by
     * {@link #isFactoryForType isFactoryForType}. <!-- begin-user-doc --> <!--
     * end-user-doc -->
     *
     * @generated
     */
    protected Collection<Object> supportedTypes = new ArrayList<Object>();

    /**
     * This constructs an instance. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     *
     * @generated
     */
    public DocbookItemProviderAdapterFactory() {
        supportedTypes.add(IEditingDomainItemProvider.class);
        supportedTypes.add(IStructuredItemContentProvider.class);
        supportedTypes.add(ITreeItemContentProvider.class);
        supportedTypes.add(IItemLabelProvider.class);
        supportedTypes.add(IItemPropertySource.class);
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Book} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected BookItemProvider bookItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Book}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createBookAdapter() {
        if (bookItemProvider == null) {
            bookItemProvider = new BookItemProvider(this);
        }

        return bookItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Info} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected InfoItemProvider infoItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Info}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createInfoAdapter() {
        if (infoItemProvider == null) {
            infoItemProvider = new InfoItemProvider(this);
        }

        return infoItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Author} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected AuthorItemProvider authorItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Author}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createAuthorAdapter() {
        if (authorItemProvider == null) {
            authorItemProvider = new AuthorItemProvider(this);
        }

        return authorItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Chapter} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ChapterItemProvider chapterItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Chapter}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createChapterAdapter() {
        if (chapterItemProvider == null) {
            chapterItemProvider = new ChapterItemProvider(this);
        }

        return chapterItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Title} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected TitleItemProvider titleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Title}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createTitleAdapter() {
        if (titleItemProvider == null) {
            titleItemProvider = new TitleItemProvider(this);
        }

        return titleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Para} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ParaItemProvider paraItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Para}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createParaAdapter() {
        if (paraItemProvider == null) {
            paraItemProvider = new ParaItemProvider(this);
        }

        return paraItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.SimpleList} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected SimpleListItemProvider simpleListItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.SimpleList}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSimpleListAdapter() {
        if (simpleListItemProvider == null) {
            simpleListItemProvider = new SimpleListItemProvider(this);
        }

        return simpleListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.ItemizedList} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ItemizedListItemProvider itemizedListItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.ItemizedList}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createItemizedListAdapter() {
        if (itemizedListItemProvider == null) {
            itemizedListItemProvider = new ItemizedListItemProvider(this);
        }

        return itemizedListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.OrderedList} instances.
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected OrderedListItemProvider orderedListItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.OrderedList}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createOrderedListAdapter() {
        if (orderedListItemProvider == null) {
            orderedListItemProvider = new OrderedListItemProvider(this);
        }

        return orderedListItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect1} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Sect1ItemProvider sect1ItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect1}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSect1Adapter() {
        if (sect1ItemProvider == null) {
            sect1ItemProvider = new Sect1ItemProvider(this);
        }

        return sect1ItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect2} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Sect2ItemProvider sect2ItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect2}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSect2Adapter() {
        if (sect2ItemProvider == null) {
            sect2ItemProvider = new Sect2ItemProvider(this);
        }

        return sect2ItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Emphasis} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected EmphasisItemProvider emphasisItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Emphasis}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createEmphasisAdapter() {
        if (emphasisItemProvider == null) {
            emphasisItemProvider = new EmphasisItemProvider(this);
        }

        return emphasisItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.ULink} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ULinkItemProvider uLinkItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.ULink}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createULinkAdapter() {
        if (uLinkItemProvider == null) {
            uLinkItemProvider = new ULinkItemProvider(this);
        }

        return uLinkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Link} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected LinkItemProvider linkItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Link}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createLinkAdapter() {
        if (linkItemProvider == null) {
            linkItemProvider = new LinkItemProvider(this);
        }

        return linkItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.XRef} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected XRefItemProvider xRefItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.XRef}. <!-- begin-user-doc
     * --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createXRefAdapter() {
        if (xRefItemProvider == null) {
            xRefItemProvider = new XRefItemProvider(this);
        }

        return xRefItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Example} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ExampleItemProvider exampleItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Example}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createExampleAdapter() {
        if (exampleItemProvider == null) {
            exampleItemProvider = new ExampleItemProvider(this);
        }

        return exampleItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect3} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected Sect3ItemProvider sect3ItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.Sect3}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createSect3Adapter() {
        if (sect3ItemProvider == null) {
            sect3ItemProvider = new Sect3ItemProvider(this);
        }

        return sect3ItemProvider;
    }

    /**
     * This keeps track of the one adapter used for all
     * {@link org.eclipse.sirius.tests.sample.docbook.ListItem} instances. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    protected ListItemItemProvider listItemItemProvider;

    /**
     * This creates an adapter for a
     * {@link org.eclipse.sirius.tests.sample.docbook.ListItem}. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter createListItemAdapter() {
        if (listItemItemProvider == null) {
            listItemItemProvider = new ListItemItemProvider(this);
        }

        return listItemItemProvider;
    }

    /**
     * This returns the root adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public ComposeableAdapterFactory getRootAdapterFactory() {
        return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
    }

    /**
     * This sets the composed adapter factory that contains this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
        this.parentAdapterFactory = parentAdapterFactory;
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public boolean isFactoryForType(Object type) {
        return supportedTypes.contains(type) || super.isFactoryForType(type);
    }

    /**
     * This implementation substitutes the factory itself as the key for the
     * adapter. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Adapter adapt(Notifier notifier, Object type) {
        return super.adapt(notifier, this);
    }

    /**
     * <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public Object adapt(Object object, Object type) {
        if (isFactoryForType(type)) {
            Object adapter = super.adapt(object, type);
            if (!(type instanceof Class<?>) || (((Class<?>) type).isInstance(adapter))) {
                return adapter;
            }
        }

        return null;
    }

    /**
     * This adds a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void addListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.addListener(notifyChangedListener);
    }

    /**
     * This removes a listener. <!-- begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void removeListener(INotifyChangedListener notifyChangedListener) {
        changeNotifier.removeListener(notifyChangedListener);
    }

    /**
     * This delegates to {@link #changeNotifier} and to
     * {@link #parentAdapterFactory}. <!-- begin-user-doc --> <!-- end-user-doc
     * -->
     *
     * @generated
     */
    @Override
    public void fireNotifyChanged(Notification notification) {
        changeNotifier.fireNotifyChanged(notification);

        if (parentAdapterFactory != null) {
            parentAdapterFactory.fireNotifyChanged(notification);
        }
    }

    /**
     * This disposes all of the item providers created by this factory. <!--
     * begin-user-doc --> <!-- end-user-doc -->
     *
     * @generated
     */
    @Override
    public void dispose() {
        if (bookItemProvider != null) {
            bookItemProvider.dispose();
        }
        if (infoItemProvider != null) {
            infoItemProvider.dispose();
        }
        if (authorItemProvider != null) {
            authorItemProvider.dispose();
        }
        if (chapterItemProvider != null) {
            chapterItemProvider.dispose();
        }
        if (titleItemProvider != null) {
            titleItemProvider.dispose();
        }
        if (paraItemProvider != null) {
            paraItemProvider.dispose();
        }
        if (simpleListItemProvider != null) {
            simpleListItemProvider.dispose();
        }
        if (itemizedListItemProvider != null) {
            itemizedListItemProvider.dispose();
        }
        if (orderedListItemProvider != null) {
            orderedListItemProvider.dispose();
        }
        if (sect1ItemProvider != null) {
            sect1ItemProvider.dispose();
        }
        if (sect2ItemProvider != null) {
            sect2ItemProvider.dispose();
        }
        if (emphasisItemProvider != null) {
            emphasisItemProvider.dispose();
        }
        if (uLinkItemProvider != null) {
            uLinkItemProvider.dispose();
        }
        if (linkItemProvider != null) {
            linkItemProvider.dispose();
        }
        if (xRefItemProvider != null) {
            xRefItemProvider.dispose();
        }
        if (exampleItemProvider != null) {
            exampleItemProvider.dispose();
        }
        if (sect3ItemProvider != null) {
            sect3ItemProvider.dispose();
        }
        if (listItemItemProvider != null) {
            listItemItemProvider.dispose();
        }
    }

}
