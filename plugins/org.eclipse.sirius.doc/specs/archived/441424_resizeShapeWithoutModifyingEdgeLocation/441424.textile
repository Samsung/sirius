h1. Modify size of a shape without modifying edge(s) location

h2. Preamble

_Summary_: Modifying a shape bounds without modifying the location of connected edges.

|_. Version |_. Status |_. Date        |_. Authors |_. Changes |
| v0.1        | DRAFT    | 2014-08-08 | fbarbin    | Initial version. |
| v0.2        | PROPOSAL    | 2014-08-20 | fbarbin    | Proposal after team review. |

_Relevant tickets_:
* "441424 - Modify size of a shape without modifying edge(s) location":https://bugs.eclipse.org/bugs/show_bug.cgi?id=441424

h2. Introduction

Currently, when you resize a node or a container, edges connected to it are shifted as well. This enhancement aims to hold the edges location during the shape resizing.


The current behavior:
!animated_current.gif!


The expected behavior after this enhancement:
!animated_after.gif!


h2. Detailed Specification

* This enhancement will guarantee that edges connected to a shape side (East, West, North or South), will keep their location if the user resizes this shape from an other side or an opposite corner. For example, edges connected on the East side will keep their location if the user enlarges the shape toward the North, West, South or North-West, South-West.

* If the user reduces the shape size, we hold the edge location while they are still within the reduced bounds. That means if we reduce a container bounds from the south-west corner toward north-east direction, edges connected on the East side will move if their connections are out of the new shape bounds.
 
h2. Backward Compatibility and Migration Paths

This evolution does not change any API.

h3. User Interface Changes

No user interface change.

h3. Documentation Changes

This new behavior should be added in the New and Noteworthy documentation. 
A note should also be added in the user doc to explain the new behavior.

h2. Tests and Non-regression strategy

Add new tests that enlarge a node, a border node and a container with several edges connected on every side.
We should also test the "centered" resize with the "ctrl" key pressed.
Sample of tests that resize elements:
* org.eclipse.sirius.tests.swtbot.sequence.InteractionUseResizeTests
* org.eclipse.sirius.tests.swtbot.PortPositionStabilityTest

h2. Implementation choices and tradeoffs

