<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.sirius" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.sirius" id="interpretedExpressionQueryProvider" name="org.eclipse.sirius.interpretedExpressionQueryProvider"/>
      </appInfo>
      <documentation>
         This extension points allows external contribution of &lt;code&gt;IInterpretedExpressionQuery&lt;/code&gt; specific to some particular expression occurrence in the VSM. This is used in particular for VSM extensions which do not fit well into the hard-coded assumptions about &lt;code&gt;IInterpretedExpressionQuery&lt;/code&gt;, which normally assumes interpreted expressions only occur inside the context of a dialect / representation description.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="interpretedExpressionProvider" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="interpretedExpressionProvider">
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.sirius.business.api.dialect.description.IInterpretedExpressionQueryProvider"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         Sirius 4.1.0.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         See &lt;code&gt;org.eclipse.sirius.ui.properties.internal.expressions.PropertiesInterpretedExpressionQuery&lt;/code&gt; which uses this mechanism to plug completion and validation support for expressions used in property views descriptions.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         See &lt;code&gt;org.eclipse.sirius.business.api.dialect.description.IInterpretedExpressionQueryProvider&lt;/code&gt; and &lt;code&gt;org.eclipse.sirius.business.api.dialect.description.IInterpretedExpressionQuery&lt;/code&gt;.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         None.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2016 Obeo.
All rights reserved. This program and the accompanying materials
are made available under the terms of the Eclipse Public License v1.0
which accompanies this distribution, and is available at
http://www.eclipse.org/legal/epl-v10.html
      </documentation>
   </annotation>

</schema>
